<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>USE HEARING PROTECTION</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on USE HEARING PROTECTION</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>neil.baldwin@mac.com (Neil Baldwin)</managingEditor>
    <webMaster>neil.baldwin@mac.com (Neil Baldwin)</webMaster>
    <copyright>(C) Neil Baldwin</copyright>
    <lastBuildDate>Fri, 07 Mar 2025 17:57:31 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2020-R</title>
      <link>http://localhost:1313/projects/2020-r/</link>
      <pubDate>Sun, 23 Mar 2025 13:27:29 +0000</pubDate><author>neil.baldwin@mac.com (Neil Baldwin)</author>
      <guid>http://localhost:1313/projects/2020-r/</guid>
      <description>A randomisation editor in Touch OSC for dubrussell&amp;rsquo;s &amp;ldquo;2020&amp;rdquo; beat-machine app.</description>
      <content:encoded><![CDATA[
<div class="callout tip">
    <div class="callout-header">
        
            <svg class="tip" viewBox="0 0 16 16">
                <path d="M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z">
                </path>
            </svg>
        
        What is 2020?
    </div>

    <p class="callout-body">
        <figure><img src="/projects/2020-r/images/dubrussell2020.png" width="70%">
</figure>
<p>2020 is a semi-modular beat-making app created by Yotaro Shuto (dubrussell). In his own words:</p>
<p><em>&ldquo;2020 is a SEMI MODULAR BEAT-MACHINE. It doesn&rsquo;t offer a traditional timeline view but instead lets you manipulate, randomize, wire, process, and perform beats in real-time, all in a single window. With 2020, you can explore millions of beat patterns on the fly.&rdquo;</em></p>

    </p>

</div>

<h2 id="rationale">Rationale</h2>
<p>While 2020 is <em>packed</em> full of real-time randomisation, there is no function to generate random presets in the Samplers, Synths and FX. Why would you want to do that? As DUB-Russell says, <em>&ldquo;Don&rsquo;t think, RANDOMISE!&rdquo;</em> (he said &ldquo;BEAT&rdquo; but&hellip;you know&hellip;)</p>
<h2 id="updates">Updates</h2>
<p><mark>31-08-2024</mark> Major update: now added PRESETS and MIXER tabs so you can recall presets and change mixer settings as part of performance</p>
<p><mark>20-08-2024</mark> WARNING: changed behaviour for RESET. Now RESET is a button that resets any selected parameters (it&rsquo;s no longer a selection button)
19-08-2024 Added support for SLICER (on the TONE group tab). See below for information.
18-08-2024 Added support for the TONE group: LOOPER1, LOOPER2 and LOOPER3</p>
<h2 id="how-does-it-work">How does it work?</h2>
<p>First off, if for some reason you&rsquo;ve reached here and you don&rsquo;t have it,  you need <a href="https://2020.dubrussell.com/">2020 Beat Machine</a></p>
<p>Then you need <a href="https://hexler.net/touchosc">TouchOSC MK2 by Hexler</a></p>
<p>TouchOSC MK2 added super-powerful LUA scripting which is what 2020-R uses to interact with the 2020 app.</p>
<p>I&rsquo;m not going to teach you how to install and use Touch OSC. The guides and tutorials on the Hexler website are good.</p>
<h2 id="interface">Interface</h2>
<p>
<figure><img src="images/2020-R%20UI.png">
</figure>

</p>
<p>Each of 2020&rsquo;s &ldquo;Groups&rdquo; is organised into tabs and the tabs are named the same way e.g. <code>GRP1</code>, <code>GRP2</code> etc. Within each tab there are the same sub-groups (samplers, instruments etc.) as you find in the 2020 app.</p>
<p>Within each sub-group there are two sections. On the right-hand side are the Send Controls. Here you can select if you want to send random absolute values (VALUE) or send randomised Probability and Range for the 2020 parameters that support that function. You can also elect to reset parameters back to their default values by selecting the RESET button.</p>
<p>The remainder of each group section is the Parameter Selection buttons. These are the ones that match the colour of the tab&hellip;and a <em>similar</em> colour to the corresponding Group in 2020) and are loosely organised into parameter types e.g. you&rsquo;ll find all Envelopes grouped in a &ldquo;ENVS&rdquo; group, all LFOs groups in a &ldquo;LFO&rdquo; group etc.</p>
<h3 id="how-to-use-2020-r">How to use 2020-R</h3>
<p>You first need to select the parameters you wish to randomise. You can select as many as you like.</p>

<div class="callout tip">
    <div class="callout-header">
        
            <svg class="tip" viewBox="0 0 16 16">
                <path d="M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z">
                </path>
            </svg>
        
        Hidden Toggle Button
    </div>

    <p class="callout-body">
        There&rsquo;s a &ldquo;hidden&rdquo; button on each sub-group. You can click/tap on the sub-group name e.g. &ldquo;GRP 1-2 Sampler&rdquo; and it will toggle all of that groups button on/off.
    </p>

</div>

<p>Then on the right-hand side, select whether you want to send random absolute values (VALUES) or Probability and Range values (RANGE). Or both!</p>
<p>Then press/click on the RANDOM button to send random values to 2020.</p>
<p>You can also reset the selected parameters back to their default values by clicking/pressing on the RESET button. Note this behaviour has changed since the 20-08-24 update.</p>
<p>That&rsquo;s it!</p>
<h4 id="fx-tab">FX Tab</h4>
<p>The FX tab is slightly different in that ALL of the FX parameters are grouped together. However there is an additional &lsquo;hidden&rsquo; helper button in each FX type. Press/click on the strip below the grouped parameters to toggle the selection on/off.</p>
<h4 id="tone-slicer">(TONE) SLICER</h4>
<p>Controls to randomise parameter for the SLICER group can be found on the TONE tab.</p>
<p>Most of the control work in exactly the same way as other groups apart from the controls in the SEQ section. Here you&rsquo;ll find switches for STEPS, RES and a radial dial labelled DENSITY</p>
<p>STEPS will randomise the vertical value of the current steps in the sequence. The DESNITY radial control controls how densely the seqence will be randomised.</p>
<p>RES (resolution) randomises the number of divisions per step.</p>
<h3 id="usage">Usage</h3>
<p>Feel free to use and modify it however you feel/need. You can dig into the script files in the TouchOSC editor but I&rsquo;ve also included the LUA source code as separate files in case you find those useful. The same code is attached to buttons/documents in the TouchOSC project.</p>
<p>If you find it useful and want to support my work and future updates then you can show your appreciation here:</p>

<h2>Support My Work üôè</h2>

<p>If you like my work and use it or learn from it, please consider supporting me or just a donation to say thanks:</p>

<a href="https://www.buymeacoffee.com/neilbaldwi3" target="_blank"><img src="https://cdn.buymeacoffee.com/buttons/v2/arial-yellow.png" class='center bmc' alt="Buy Me A Coffee" style="height: 60px !important;width: 217px !important;" ></a>





]]></content:encoded>
    </item>
    <item>
      <title>MMMSEGUI</title>
      <link>http://localhost:1313/projects/mmmsegui/</link>
      <pubDate>Sun, 23 Mar 2025 13:38:56 +0000</pubDate><author>neil.baldwin@mac.com (Neil Baldwin)</author>
      <guid>http://localhost:1313/projects/mmmsegui/</guid>
      <description>MMMSEGUI is a multi-segment graph editor written in JS/JSUI/MGraphics for Cycling 74&amp;rsquo;s Max platform.</description>
      <content:encoded><![CDATA[
<h2>Support My Work üôè</h2>

<p>If you like my work and use it or learn from it, please consider supporting me or just a donation to say thanks:</p>

<a href="https://www.buymeacoffee.com/neilbaldwi3" target="_blank"><img src="https://cdn.buymeacoffee.com/buttons/v2/arial-yellow.png" class='center bmc' alt="Buy Me A Coffee" style="height: 60px !important;width: 217px !important;" ></a>





<h2 id="rationale">Rationale</h2>
<p>The main objectives for MMMSEGUI were:</p>
<ul>
<li>have the ability to output directly into a list message for use with the <code>curve~</code> Max object</li>
<li>make it very simple and fast to use while minimising modifier key requirement</li>
<li>have the ability to add and delete nodes quickly and intuitively</li>
<li>have the ability to easily alter curve shapes and move graph segments around</li>
<li>have it easy to add to other projects and save the settings with your patchers</li>
<li>have it be very customisable</li>
</ul>
<p>In addition to this, recent updates include:</p>
<ul>
<li>automatic resizing of the graph when resizing the JSUI window</li>
<li>commands to clear the graph and also to create a graph through a message list</li>
<li>poll the graph to sample single values at a given point in the time (X) axis</li>
<li>the ability to set the X, Y and control point of a single node via messages</li>
</ul>
<p>For any previous users please read the following section regarding the November 2023 update.</p>
<h2 id="how-can-i-get-mmmsegui">How Can I Get MMMSEGUI?</h2>
<p>MMMSEGUI is freely available on my Github repository:</p>
<p><a href="https://github.com/neilbaldwin/mmmsegui">MMMSEGUI Repository</a></p>
<h2 id="important---major-update-and-refactoring-november-2023">Important - Major Update and Refactoring November 2023</h2>
<p>A soft apology to any existing users, especially if you&rsquo;ve incorporated MMMSEGUI into any of your own projects and patchers. This update has <strong>MAJOR</strong> changes:</p>

<div class="callout warning">
    <div class="callout-header">
        
            <svg class="warning" viewBox="0 0 16 16">
                <path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
            </svg>
        
        Possible breaking changes
    </div>

    <p class="callout-body">
        <ul>
<li>Any parameters you were setting with messages previously will likely break as I&rsquo;ve renamed several functions and standardised things a bit.</li>
<li>When you load a patcher that used the old version of MMMSEGUI, using the new JS file will likely not apply customisations properly. You may need to &ldquo;relink&rdquo; the JSUI object to the new <code>mmmsegui.js</code> file. You&rsquo;ll also need to immediately save your patcher and reload it to make sure your patcher is saving parameters with the correct internal parameter names.</li>
</ul>

    </p>

</div>

<p>It was difficult to incorporate many of the changes without some collateral damage. I hope it&rsquo;s not too painful for you and have faith that the ground-up refactoring has improved the overall structure so this situation won&rsquo;t happen in future. Shouldn&rsquo;t happen. Never say never in development!</p>
<p><mark>18/11/2023 Update Overview</mark></p>
<p>The entire documentation has been updated but here are the highlights:</p>
<ul>
<li>setting up and instantiating is now WAY simpler. Sensible default values are generated rather than making the user define them.</li>
<li>changed mouse behaviour adding and removing nodes: now just double-click instead of SHIFT + click</li>
<li>the curve shape of a segment can be reset (to linear) by holding SHIFT and double-clicking the segment</li>
<li>MMMSEGUI will now resize itself if you resize the JSUI window</li>
<li>the <code>@parameter</code> method of setting customisation has been removed in favour of dedicated messages</li>
<li>there is now a much simpler <code>fillcolor</code>, <code>strokeColor</code>, and <code>bgColor</code> to set the graph colors along with a set of new messages for customising other features (see below)</li>
<li>there is <code>clear</code> command to reset the graph (customisations are persistent)</li>
<li>added a <code>graph</code> command to define a graph numerically for making templates and presets etc.</li>
<li>similarly there is a <code>graphfromcurve</code> command that lets you define a graph numerically using MMMSEGUI output format (input format for Max <code>[curve~]</code>)</li>
<li>you can now move a graph segment in both the X and Y axis (hold SHIFT and drag the curve segment), previously you could only move a segment in the  Y axis.</li>
<li>two new commands to sample the graph Y value at a point in time, <code>getvalue</code> uses a normalised value as the X position where <code>getvalueattime</code> lets you specify a time in ms.</li>
<li>some new commands to modify position and control point parameters for individual nodes</li>
</ul>
<h2 id="updates">Updates</h2>
<p><mark>13/02/2024</mark></p>
<p>Added &ldquo;Phasor Mode&rdquo; - a special mode with restrictions to use the the <code>phasor~</code> object.</p>
<h2 id="content-and-installation">Content and Installation</h2>
<ul>
<li><code>mmmsegui.js</code> is the main JSUI file you need to use MMMSEGUI.</li>
<li><code>mmmsegui.maxpat</code> is the demo patcher to demonstrate all MMMSEGUI&rsquo;s features - play around with stuff</li>
<li><code>readme.md</code> this file.</li>
<li><code>mmmseg_audio_demo_1.maxpat</code> demo of MMMSEGUI using a very basic step sequencer that drive a monophonic synth voice. Two step sequencers control pitch and LPF cutoff. Three MMMSEGUI envelopes control pitch, low-pass filter and overdrive modulation.</li>
<li><code>mmmseg_audio_demo_2.maxpat</code> a simple 4-step sequencer steps through four MMSEGUIs, each of which modulate the pitch of a <code>[rect~]</code> oscillator. You can change the metro tempo and also whether the MMSEGUIs loop (the <code>curve~</code> objects are re-triggered when they reach their end point).</li>
</ul>
<h2 id="adding-mmmsegui-to-your-patcher">Adding MMMSEGUI To Your Patcher</h2>
<p>Put the <code>mmmsegui.js</code> file in your Max search path(s) then add a JSUI object to your patcher specifying the MMMSEGUI filename:</p>






<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">1</span><span>[JSUI <span style="color:#f38ba8">@</span>filename mmmsegui.js]</span></span></code></pre></div>
<p>The default MMMSEGUI only contains two nodes, the end and start nodes. These cannot be deleted and only their Y position (and curve shape) can be changed. To add more nodes (or delete them) you need to use the mouse (and keyboard).</p>
<h2 id="adding-deleting-and-moving-nodes--and-curves">Adding, Deleting and Moving Nodes.  And Curves.</h2>
<table>
  <thead>
      <tr>
          <th>Function</th>
          <th>Mouse Control</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>Add a new node</td>
          <td>Double-click on a curve segment. The new node will be placed where you click.</td>
      </tr>
      <tr>
          <td>Delete a node</td>
          <td>Double-click an existing node.</td>
      </tr>
      <tr>
          <td>Move a node</td>
          <td>Click and drag a node with the mouse.</td>
      </tr>
      <tr>
          <td>Change curve shape</td>
          <td>Click and drag a curve segment with the mouse.</td>
      </tr>
      <tr>
          <td>Move a curve segment</td>
          <td>Hold <code>SHIFT</code> then click and drag a curve segment with the mouse.</td>
      </tr>
      <tr>
          <td>Reset curve shape for a segment</td>
          <td>Hold <code>SHIFT</code> then double-click a curve segment.</td>
      </tr>
  </tbody>
</table>
<p><figure><img src="/projects/mmmsegui/images/mmmsegui.gif" width="70%">
</figure>

<br>

<div class="callout note">
    <div class="callout-header">
        
            <svg class="note" viewbox="0 0 16 16">
                <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z">
                </path>
            </svg>
        
        Constraints on Moving and Deleting Nodes
    </div>

    <p class="callout-body">
        <p>You cannot delete the first and last nodes. They have a square shape to distinguish them from regular nodes (circular).</p>
<p>Movement will be constrained in the Y axis by whichever of the two defining nodes is the highest/lowest. Movement will be constrained in the X axis by the X position of the previous and next node in the graph.</p>

    </p>

</div>
</p>
<h2 id="customisation-messages">Customisation Messages</h2>
<p>Customisation is done via Max message objects. For data type see the <strong>Notes</strong> column. Some error/range checking/clamping is done but I&rsquo;m sure you can break it if you try.</p>
<table>
  <thead>
      <tr>
          <th>Message</th>
          <th>Description</th>
          <th>Notes</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><code>fillcolor</code></td>
          <td>Sets the fill color for the graph.</td>
          <td>RGBA (floats)</td>
      </tr>
      <tr>
          <td><code>strokeColor</code></td>
          <td>Sets the stroke color for the graph.</td>
          <td>RGBA (floats)</td>
      </tr>
      <tr>
          <td><code>bgColor</code></td>
          <td>Sets the background color underneath the graph.</td>
          <td>RGBA (floats)</td>
      </tr>
      <tr>
          <td><code>nodesize</code></td>
          <td>Sets the radius of the nodes in pixels.</td>
          <td>Value clamped 2.5 to 8</td>
      </tr>
      <tr>
          <td><code>linewidth</code></td>
          <td>Sets the line width (graph and node stroke)</td>
          <td>Value clamped 1.0 to 4.0</td>
      </tr>
      <tr>
          <td><code>padding</code></td>
          <td>Sets a padding amount inside the JSUI window in pixels.</td>
          <td>Clamped 0 to 32</td>
      </tr>
      <tr>
          <td><code>timescale</code></td>
          <td>Sets the scale of the X axis output in MS</td>
          <td>Default 1000ms</td>
      </tr>
      <tr>
          <td><code>autooutput</code></td>
          <td>Determines if graph values are constantly output or only when banged.</td>
          <td>0/1, default: 1</td>
      </tr>
      <tr>
          <td><code>nodehighlighting</code></td>
          <td>Highlight node when mouse over.</td>
          <td>0/1, default : 1</td>
      </tr>
      <tr>
          <td><code>curvehighlighting</code></td>
          <td>Highlight curve when mouse over.</td>
          <td>0/1, default : 1</td>
      </tr>
      <tr>
          <td><code>autohidenodes</code></td>
          <td>Automatically hide nodes when mouse not in JSUI window</td>
          <td>0/1, default : 1</td>
      </tr>
      <tr>
          <td><code>nodesvisible</code></td>
          <td>Override to make nodes always visible (or not!)</td>
          <td>0/1, default : 0</td>
      </tr>
      <tr>
          <td><code>mousespeed</code></td>
          <td>Mouse movement scaling when dragging nodes and curves</td>
          <td>Default 1.0</td>
      </tr>
      <tr>
          <td><code>curveOnly</code></td>
          <td>Only draws the curve stroke, unfilled</td>
          <td>Default 0</td>
      </tr>
      <tr>
          <td><code>phasorMode</code></td>
          <td>Special mode for use with <code>phasor~</code> - see below</td>
          <td>Default 0</td>
      </tr>
  </tbody>
</table>
<h3 id="color-messages">Color Messages</h3>
<p>For the color messages that have the RGBA data type there are 4 values, so your message will look like: <code>[fillcolor $1 $2 $3 $4]</code> where $1 is the red value, $2 is the green value, $3 is the blue value and $4 is the alpha value. This is standard RGBA format in Max and is the output from <code>[colorpicker @compatibility 0]</code> or <code>[swatch]</code> etc.</p>
<h3 id="auto-output">Auto Output</h3>
<p>Auto Output is on by default (turn it off with <code>[autooutput 0]</code>)which means anything you do that changes the nodes, curves or timescale will cause MMMSEGUI to output the current graph as a <code>curve~</code> formatted list. If you set Auto Output to off, nothing will be output from MMMSEGUI until you send a <code>bang</code> message to its inlet. The only exception to this is the <code>getvalue</code> and <code>getvalueattime</code> commands (see <a href="#command-messages">Command Messages</a>), for obvious reasons. Sending messages to MMMSEGUI that only change the graphical <em>look</em> of the graph will not cause output of node list.</p>
<h2 id="phasor-mode">Phasor Mode</h2>
<p>&ldquo;Phasor Mode&rdquo; is a feature requested by a few members of the Max Discord channel for use with the <code>phasor~</code>
object. In Phasor Mode there are a few changes and restrictions to the way MMMSEGUI works:</p>

<div class="callout tip">
    <div class="callout-header">
        
            <svg class="tip" viewBox="0 0 16 16">
                <path d="M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z">
                </path>
            </svg>
        
        Phasor Mode Differences
    </div>

    <p class="callout-body">
        <ul>
<li>The graph Y position starts at 0.0 (bottom) and ends at 1.0 (top)</li>
<li>The first and last node Y positions are fixed (0.0 and 1.0 respectively) and cannot be moved</li>
<li>Each node Y position is restricted by the preceding and following nodes: a node cannot be moved higher than the next node or lower than the previous one</li>
</ul>

    </p>

</div>

<h3 id="selecting-phasor-mode">Selecting Phasor Mode</h3>
<p>The message <code>setphasormode</code> is used to turn Phasor Mode on/off. 0 turns it off (default) and 1 turns it on.</p>
<p>However you must also then use the <code>clear</code> message to reset the graph which means if you intend to use Phasor Mode on a MMMSEGUI object, select Phasor Mode first, then clear the graph before setting nodes etc.</p>
<p>Clearing the graph is necessary so that the graph starts with nodes that respect the restrictions of Phasor Mode. I thought about just adding some validation code so that you could switch between Phasor Mode on/off but that would also modify your graph. Clearing the graph is simpler and easier.</p>
<h2 id="command-messages">Command Messages</h2>
<p>In addition to customisation there are some messages that control MMMSEGUI:</p>
<table>
  <thead>
      <tr>
          <th>Message</th>
          <th>Description</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><code>clear</code></td>
          <td>Resets the graph to default two-node shape. Customisations will remain intact.</td>
      </tr>
      <tr>
          <td><code>graph</code></td>
          <td>You send send a list of values to MMMSEGUI to create a graph numerically.</td>
      </tr>
      <tr>
          <td><code>graphfromcurve</code></td>
          <td>Similar to <code>graph</code> but you can paste the output from MMMSEGUI to define the graph</td>
      </tr>
      <tr>
          <td><code>getvalue n</code></td>
          <td>Get the Y value at the specified position <code>n</code> (normalised X position)</td>
      </tr>
      <tr>
          <td><code>getvalueattime n</code></td>
          <td>Get the Y value at the specified time <code>n</code> (ms)</td>
      </tr>
      <tr>
          <td><code>setxat n x</code></td>
          <td>Set the X position <code>x</code> for the node <code>n</code></td>
      </tr>
      <tr>
          <td><code>setyat n y</code></td>
          <td>Set the Y position <code>y</code> for the node <code>n</code></td>
      </tr>
      <tr>
          <td><code>setcat n c</code></td>
          <td>Set the control point <code>c</code> for the node <code>n</code></td>
      </tr>
      <tr>
          <td><code>setnode n x y c</code></td>
          <td>Set the position and control point for node <code>n</code></td>
      </tr>
  </tbody>
</table>
<h3 id="set-value-commands">Set Value Commands</h3>
<p>A new set of commands to enable you to set the position and curve shape of individual nodes in your graph. This has some  interesting uses especially using an external signal to modulate node coordinates.</p>
<p><code>setxat n x</code>, <code>setyat n, y</code> and <code>setcat n c</code> are used to set the X, Y and control point of node <code>n</code></p>
<p><code>setnode n x y c</code> allows you to set all the properties of a node in a single command.</p>
<p>Node number <code>n</code> needs to be a valid node in the current graph but MMMSEGUI will just reject the command silently if the node number is invalid.</p>
<p>The X position is constrained by the X position of the previous and next node in the graph.</p>
<p>You cannot change the X position of the first and last node. The first node is node 0.</p>
<p>Setting the curve point, <code>c</code>, affects the shape of the curve <em>to the right</em> of the specified node <code>n</code>.</p>
<h3 id="get-value-commands">Get Value Commands</h3>
<p>Another two new commands, <code>getvalue</code> and <code>getvalueattime</code> allow you to sample the graph with a position/time input and get the normalised Y value at that point.</p>
<p>The value is output from <code>[outlet 2]</code>, 0.0 to 1.0 with 0.0 being at the bottom and 1.0 at the top.</p>
<p><code>getvalue</code> input is clamped to 0.0 - 1.0 whereas <code>getvalueattime</code> will post an error to the Max Console if the ms time is outside of the range of the current <code>timeScale</code> setting for the graph.</p>
<h3 id="graph-commands">Graph Commands</h3>
<p>There are two further new commands that let you send a list message to MMMSEGUI to define a graph numerically. This is handy if you want to make your own presets or templates for example. The two command messages are <code>[graph]</code> and <code>[graphfromcurve]</code></p>
<p>When you send either the <code>graph</code> or <code>graphfromcurve</code> message, the graph will be immediately updated and the values mirrored at  outlet 1.</p>

<div class="callout warning">
    <div class="callout-header">
        
            <svg class="warning" viewBox="0 0 16 16">
                <path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
            </svg>
        
        Graph Command Constraints
    </div>

    <p class="callout-body">
        <p>Internally you cannot have a graph smaller than two nodes. If you send a <code>graph</code> or <code>graphfromcurve</code> command with too few arguments you will get an error message in Max Console and the command will just fail to complete.</p>
<p>Also, the first and last node in the graph need to be at X 0.0 and 1.0 respectively. If they aren&rsquo;t, those nodes will have their X position adjusted and you&rsquo;ll get a warning in Max Console. The new graph will import OK though just with those X positions modified as explained.</p>

    </p>

</div>

<h4 id="graph">[graph]</h4>
<p>The first command, <code>graph</code>, lets you create a new graph with normalised values:</p>






<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">1</span><span>[graph x1 y1 c1 x2 y2 c2 x3 y3 c3] etc.</span></span></code></pre></div>
<ul>
<li><code>xn</code> is the normalised position of the node along the X axis, 0.0 to 1.0, left-to-right</li>
<li><code>yn</code> is the normalised magnitude in the Y axis, 0.0 to 1.0, top-to-bottom</li>
<li><code>cn</code> is the  normalised curve value, 0.0 to 1.0, 0.5 is the middle (linear curve)</li>
</ul>
<p>This data form parallels the MMMSEGUI internal data form. It&rsquo;s a more simple structure than <code>graphfromcurve</code> as it&rsquo;s easier to visualise and because the X values are normalised you can define a graph independent of it&rsquo;s <code>timeScale</code> setting.</p>
<h4 id="graphfromcurve">[graphfromcurve]</h4>
<p>You can also send MMMSEGUI a <code>[graphfromcurve]</code> message to define a graph numerically but this time the data format is exactly that of MMMSEGUI output (the same format as input message to Max&rsquo;s <code>[curve~]</code> object).</p>






<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">1</span><span>[graphfromcurve y1 d1 c1 y2 d2 c2 y3 d3 c3] etc.</span></span></code></pre></div>
<p>The parameters are slightly different from the <code>graph</code> command in order to be compatible with <code>[curve~]</code></p>
<ul>
<li><code>yn</code> is the Y axis position of the node but is inverted, 1.0 is the top, 0.0 is the bottom</li>
<li><code>dn</code> is the delta time in ms from the previous node</li>
<li><code>cn</code> is the  <code>curve~</code> curve shape value, -0.999 to 0.999</li>
</ul>

<div class="callout tip">
    <div class="callout-header">
        
            <svg class="tip" viewBox="0 0 16 16">
                <path d="M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z">
                </path>
            </svg>
        
        Curve Control Point Range
    </div>

    <p class="callout-body">
        The value for the curve control point (c1, c2 etc.) is in the range -0.999 to 0.999 as this is the scaling that is applied to this value when it&rsquo;s output from MMMSEGUI. For some reason sending curve values above/below that upsets <code>[curve~]</code>.
    </p>

</div>

<p>The advantage of <code>graphfromcurve</code> over <code>graph</code> is that you can hook up the output of MMMSEGUI to the right-hand inlet of a <code>message</code> object and then use that output directly to form a <code>graphfromcurve</code> message.</p>
<p>The disadvantages of <code>graphfromcurve</code> compared to <code>graph</code> for manually typing in a graph definition are:</p>
<ul>
<li>it&rsquo;s tricky to visualise and calculate the delta times</li>
<li>MMMSEGUI has to calculate the timescale (X axis) from the delta times of the X position of the nodes and then it automatically sets the <code>timeScale</code> parameter from this</li>
</ul>
<h2 id="saving">Saving</h2>
<p>MMMSEGUI has an internal save structure that will save all of it&rsquo;s parameters when you save your patcher and restore itself when you reload your patcher. On one hand this is convenient and simple but <strong>MMMSEGUI is always saving</strong> - any changes you make to MMMSEGUI while playing with your patcher will be saved when you save.</p>

<div class="callout note">
    <div class="callout-header">
        
            <svg class="note" viewbox="0 0 16 16">
                <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z">
                </path>
            </svg>
        
        Enabling and Disabling Saving
    </div>

    <p class="callout-body">
        I have an idea for a parameter that enables/disables saving. If you feel that would be beneficial put something in Github Issues.
    </p>

</div>

<h2 id="inlets-and-outlets">Inlets and Outlets</h2>
<ul>
<li>
<p><code>[inlet 1]</code> handles all the command and parameter messages</p>
</li>
<li>
<p><code>[outlet 1]</code> outputs a list of nodes and delta times from the current graph shape</p>
</li>
<li>
<p><code>[outlet 2]</code> is used to retrieve a single Y value at a point in time</p>
</li>
</ul>
<p>See <a href="#command-messages">Command Messages</a> for details on the various commands.</p>
<h2 id="using-the-output-from-mmmsegui">Using the Output from MMMSEGUI</h2>
<p>As already mentioned, the output is deliberately formatted as a list that will be immediately accepted by a <code>[curve~]</code> object.</p>
<p>The output format is a <em>trio</em> of parameters per curve:</p>






<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">1</span><span>[magnitude deltaTime curveFactor]</span></span></code></pre></div>
<ul>
<li>
<p><em>magnitude</em> is the Y axis value</p>
</li>
<li>
<p><em>deltaTime</em> is the time in milliseconds from when the <code>[curve~]</code> previous node (or when the <code>curve~</code> was triggered) and is calculated from the <code>timescale</code> setting</p>
</li>
<li>
<p><em>curveFactor</em> is the control-point value that describes the curve shape. The value range is -0.999 to 0.999 - for some reason if you go to -1.0 or 1.0 things start to go a bit weird with the <code>[curve~]</code> object. That&rsquo;s a Max issue, not MMMSEGUI!</p>
</li>
</ul>

<div class="callout tip">
    <div class="callout-header">
        
            <svg class="tip" viewBox="0 0 16 16">
                <path d="M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z">
                </path>
            </svg>
        
        MMMSEGUI Curve Shape
    </div>

    <p class="callout-body">
        The shape of the curves in MMMSEGUI is a compromise to some extent. The bezier curve function in JSUI is a quadratic curve and as such has two control points to describe the curve shape. However the <code>curve~</code> object only has one control point. Consequently the curve shapes in MMMSEGUI are more synchronous with the expected behaviour of the <code>curve~</code> output rather than take advantage of the flexibility of the JSUI curve function.
    </p>

</div>

<p>Each <em>trio</em> of parameters makes a stage of a multi-stage curve in a <code>[curve~]</code> object.</p>
<h3 id="using-the-output-from-the-curve-object">Using the Output From the [curve~] Object</h3>
<p>The output from a connected <code>[curve~]</code> object will be a float value in the range 0.0 to 1.0 so you will need a <code>[scale~]</code> object or other  ways to transform this normalised value into something useful. I&rsquo;ll leave that for you to work out.</p>
<p>I may look at other output features such as exponential scaling for future updates.</p>
<h2 id="rolling-your-own-output">Rolling Your Own Output</h2>
<p>If you want to create your own output format, look towards the bottom of the <code>mmmsegui.js</code> file for the function called <code>this.outputList</code>. This is the internal function that is called by MMMSEGUI whenever it needs to output the node values.</p>






<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 1</span><span><span style="color:#cba6f7">this</span>.outputList <span style="color:#89dceb;font-weight:bold">=</span> <span style="color:#f38ba8">function</span>() {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 2</span><span>  <span style="color:#f38ba8">var</span> out <span style="color:#89dceb;font-weight:bold">=</span> [];
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 3</span><span>  <span style="color:#6c7086;font-style:italic">// Add first node to output list using a time delta of zero
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 4</span><span><span style="color:#6c7086;font-style:italic"></span>  out.push(<span style="color:#fab387">1</span><span style="color:#89dceb;font-weight:bold">-</span><span style="color:#cba6f7">this</span>.nodeList[<span style="color:#fab387">0</span>].y, <span style="color:#fab387">0.0</span>, <span style="color:#fab387">0.0</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 5</span><span>  <span style="color:#cba6f7">for</span> (n <span style="color:#89dceb;font-weight:bold">=</span> <span style="color:#fab387">1</span>; n <span style="color:#89dceb;font-weight:bold">&lt;=</span> <span style="color:#cba6f7">this</span>.nodeCount<span style="color:#89dceb;font-weight:bold">-</span><span style="color:#fab387">1</span>; n<span style="color:#89dceb;font-weight:bold">++</span>) {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 6</span><span>    <span style="color:#6c7086;font-style:italic">// Add next node Y value
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 7</span><span><span style="color:#6c7086;font-style:italic"></span>    out.push(<span style="color:#fab387">1</span><span style="color:#89dceb;font-weight:bold">-</span><span style="color:#cba6f7">this</span>.nodeList[n].y);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 8</span><span>    <span style="color:#6c7086;font-style:italic">// Add node delta time
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 9</span><span><span style="color:#6c7086;font-style:italic"></span>    out.push((<span style="color:#cba6f7">this</span>.nodeList[n].x <span style="color:#89dceb;font-weight:bold">-</span> <span style="color:#cba6f7">this</span>.nodeList[n<span style="color:#89dceb;font-weight:bold">-</span><span style="color:#fab387">1</span>].x) <span style="color:#89dceb;font-weight:bold">*</span> <span style="color:#cba6f7">this</span>.timeScale)
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">10</span><span>    <span style="color:#6c7086;font-style:italic">// Add node curve factor
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">11</span><span><span style="color:#6c7086;font-style:italic"></span>    out.push((<span style="color:#cba6f7">this</span>.nodeList[n<span style="color:#89dceb;font-weight:bold">-</span><span style="color:#fab387">1</span>].cp <span style="color:#89dceb;font-weight:bold">*</span> <span style="color:#fab387">1.998</span>) <span style="color:#89dceb;font-weight:bold">-</span> <span style="color:#fab387">0.999</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">12</span><span>  }
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">13</span><span>  <span style="color:#6c7086;font-style:italic">// Send output list to first outlet
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">14</span><span><span style="color:#6c7086;font-style:italic"></span>  <span style="color:#cba6f7">this</span>.outputFlag <span style="color:#89dceb;font-weight:bold">=</span> <span style="color:#fab387">false</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">15</span><span><span style="color:#cba6f7">return</span> out;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">16</span><span>}</span></span></code></pre></div>
<p>Here I&rsquo;m creating an empty array, <code>out</code> and then iterating through the nodes pushing the Y value, then the calculated delta time and then the curve factor. The variable <code>this.outputFlag</code> is used to only trigger output when there has been a change in the graph that requires outputting. The final line returns the output array for sending to the JSUI outlet.</p>
<h2 id="parameter-style-customisation">@parameter Style Customisation</h2>
<p>I made the decision to remove this in the November 2023 update. Several reasons, the main one being that you can&rsquo;t tweak the parameters as <code>jsarguments</code> without causing MMMSEGUI to recompile which was <em>deeply</em> annoying. Poor design decision on my part: I hold my hands up.</p>
<p>However, if the removal of these is the worse news ever for you, here&rsquo;s how you can implement them yourself.</p>
<p>The basic code for interpreting the <code>@parameters</code> follow this form. Put this in the <code>mmmsegui.js</code> code just after the instantiation line:</p>






<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 1</span><span>jsarguments.filter(<span style="color:#f38ba8">function</span>(arg) {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 2</span><span>  <span style="color:#cba6f7">if</span> (arg[<span style="color:#fab387">0</span>] <span style="color:#89dceb;font-weight:bold">==</span> <span style="color:#a6e3a1">&#34;@&#34;</span>) {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 3</span><span>    <span style="color:#f38ba8">var</span> val <span style="color:#89dceb;font-weight:bold">=</span> jsarguments[jsarguments.indexOf(arg)<span style="color:#89dceb;font-weight:bold">+</span><span style="color:#fab387">1</span>]
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 4</span><span>    <span style="color:#cba6f7">switch</span> (arg) {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 5</span><span>      <span style="color:#cba6f7">case</span> <span style="color:#a6e3a1">&#34;@nodesize&#34;</span><span style="color:#89dceb;font-weight:bold">:</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 6</span><span>        mmmsegui.setNodeSize(val)
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 7</span><span>        <span style="color:#cba6f7">break</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 8</span><span>      <span style="color:#cba6f7">case</span> <span style="color:#a6e3a1">&#34;@timescale&#34;</span><span style="color:#89dceb;font-weight:bold">:</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c"> 9</span><span>        mmmsegui.setTimeScale(val)
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">10</span><span>        <span style="color:#cba6f7">break</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">11</span><span>      <span style="color:#cba6f7">default</span><span style="color:#89dceb;font-weight:bold">:</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">12</span><span>        <span style="color:#cba6f7">break</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">13</span><span>    }
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">14</span><span>  }
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">15</span><span>});</span></span></code></pre></div>
<p>So you can add as many or as few as you like by adding more <code>case</code> clauses to the JS <code>switch</code> statement. You can see there are two MMMSEGUI function calls, <code>mmmsegui.setNodeSize(val)</code> and <code>mmmsegui.setTimeScale(val)</code>. These function names are the internal functions that handle those parameters. <code>val</code> is the value you place after each of the <code>@parameters</code></p>
<p>As an example, let&rsquo;s say you wanted to add a parameter called <code>@padding</code> to set the padding inside the JSUI window. Add another <code>switch</code> clause before where the <code>default</code> one is in the code:</p>






<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">1</span><span><span style="color:#cba6f7">case</span> <span style="color:#a6e3a1">&#34;@padding&#34;</span><span style="color:#89dceb;font-weight:bold">:</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">2</span><span>	mmmsegui.setPadding(val)
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c">3</span><span>	<span style="color:#cba6f7">break</span>;</span></span></code></pre></div>
<p>The <code>@parameter</code> names don&rsquo;t have to match the function names, you can call them whatever you like.</p>
<p>The list of functions you can use is here (though could be subject to change but I&rsquo;ll endeavour to update this section if any future updates affect them). I won&rsquo;t describe them as their function should be fairly obvious from their name.</p>
<p>The obvious omissions here are the functions to set fill, stroke and background colors. This is a bit more fiddly to implement as @paramters because you need four float values (RGBA) and the example code above will only copy with one parameter. If you need that and want help with it just get in touch.</p>
<p><strong>Node and Line</strong>
<code>setNodeSize()</code>, <code>setLineWidth()</code>, <code>setPadding()</code></p>
<p><strong>Input and Output</strong>
<code>setTimeScale()</code>, <code>setAutoOutput()</code>,<code>setMouseSpeed()</code></p>
<p><strong>Mouse-over Highlighting</strong>
<code>setNodeHighlighting()</code>, <code>setCurveHighlighting()</code></p>
<p><strong>Node Visibility</strong>
<code>setAutoHideNodes()</code>,<code>setNodesVisible()</code></p>
]]></content:encoded>
    </item>
    <item>
      <title>Post01</title>
      <link>http://localhost:1313/post01/</link>
      <pubDate>Mon, 24 Mar 2025 20:31:55 +0000</pubDate><author>neil.baldwin@mac.com (Neil Baldwin)</author>
      <guid>http://localhost:1313/post01/</guid>
      <description></description>
      <content:encoded><![CDATA[]]></content:encoded>
    </item>
  </channel>
</rss>
